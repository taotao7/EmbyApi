//
// SyncModelSyncDialogOptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SyncModelSyncDialogOptions: Codable, JSONEncodable, Hashable {

    public enum Options: String, Codable, CaseIterable {
        case name = "Name"
        case quality = "Quality"
        case unwatchedOnly = "UnwatchedOnly"
        case syncNewContent = "SyncNewContent"
        case itemLimit = "ItemLimit"
        case profile = "Profile"
    }
    public var targets: [SyncSyncTarget]?
    public var options: [Options]?
    public var qualityOptions: [SyncModelSyncQualityOption]?
    public var profileOptions: [SyncModelSyncProfileOption]?

    public init(targets: [SyncSyncTarget]? = nil, options: [Options]? = nil, qualityOptions: [SyncModelSyncQualityOption]? = nil, profileOptions: [SyncModelSyncProfileOption]? = nil) {
        self.targets = targets
        self.options = options
        self.qualityOptions = qualityOptions
        self.profileOptions = profileOptions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case targets = "Targets"
        case options = "Options"
        case qualityOptions = "QualityOptions"
        case profileOptions = "ProfileOptions"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(targets, forKey: .targets)
        try container.encodeIfPresent(options, forKey: .options)
        try container.encodeIfPresent(qualityOptions, forKey: .qualityOptions)
        try container.encodeIfPresent(profileOptions, forKey: .profileOptions)
    }
}

