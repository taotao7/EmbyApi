//
// PlayRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PlayRequest: Codable, JSONEncodable, Hashable {

    public var controllingUserId: String?
    public var subtitleStreamIndex: Int?
    public var audioStreamIndex: Int?
    public var mediaSourceId: String?
    public var startIndex: Int?

    public init(controllingUserId: String? = nil, subtitleStreamIndex: Int? = nil, audioStreamIndex: Int? = nil, mediaSourceId: String? = nil, startIndex: Int? = nil) {
        self.controllingUserId = controllingUserId
        self.subtitleStreamIndex = subtitleStreamIndex
        self.audioStreamIndex = audioStreamIndex
        self.mediaSourceId = mediaSourceId
        self.startIndex = startIndex
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case controllingUserId = "ControllingUserId"
        case subtitleStreamIndex = "SubtitleStreamIndex"
        case audioStreamIndex = "AudioStreamIndex"
        case mediaSourceId = "MediaSourceId"
        case startIndex = "StartIndex"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(controllingUserId, forKey: .controllingUserId)
        try container.encodeIfPresent(subtitleStreamIndex, forKey: .subtitleStreamIndex)
        try container.encodeIfPresent(audioStreamIndex, forKey: .audioStreamIndex)
        try container.encodeIfPresent(mediaSourceId, forKey: .mediaSourceId)
        try container.encodeIfPresent(startIndex, forKey: .startIndex)
    }
}

