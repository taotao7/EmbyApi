//
// SyncModelSyncedItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SyncModelSyncedItem: Codable, JSONEncodable, Hashable {

    public var serverId: String?
    public var syncJobId: Int64?
    public var syncJobName: String?
    public var syncJobDateCreated: Date?
    public var syncJobItemId: Int64?
    public var originalFileName: String?
    public var item: BaseItemDto?
    public var userId: String?
    public var additionalFiles: [SyncModelItemFileInfo]?

    public init(serverId: String? = nil, syncJobId: Int64? = nil, syncJobName: String? = nil, syncJobDateCreated: Date? = nil, syncJobItemId: Int64? = nil, originalFileName: String? = nil, item: BaseItemDto? = nil, userId: String? = nil, additionalFiles: [SyncModelItemFileInfo]? = nil) {
        self.serverId = serverId
        self.syncJobId = syncJobId
        self.syncJobName = syncJobName
        self.syncJobDateCreated = syncJobDateCreated
        self.syncJobItemId = syncJobItemId
        self.originalFileName = originalFileName
        self.item = item
        self.userId = userId
        self.additionalFiles = additionalFiles
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case serverId = "ServerId"
        case syncJobId = "SyncJobId"
        case syncJobName = "SyncJobName"
        case syncJobDateCreated = "SyncJobDateCreated"
        case syncJobItemId = "SyncJobItemId"
        case originalFileName = "OriginalFileName"
        case item = "Item"
        case userId = "UserId"
        case additionalFiles = "AdditionalFiles"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(serverId, forKey: .serverId)
        try container.encodeIfPresent(syncJobId, forKey: .syncJobId)
        try container.encodeIfPresent(syncJobName, forKey: .syncJobName)
        try container.encodeIfPresent(syncJobDateCreated, forKey: .syncJobDateCreated)
        try container.encodeIfPresent(syncJobItemId, forKey: .syncJobItemId)
        try container.encodeIfPresent(originalFileName, forKey: .originalFileName)
        try container.encodeIfPresent(item, forKey: .item)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encodeIfPresent(additionalFiles, forKey: .additionalFiles)
    }
}

