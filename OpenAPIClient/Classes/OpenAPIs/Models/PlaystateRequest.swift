//
// PlaystateRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PlaystateRequest: Codable, JSONEncodable, Hashable {

    public enum Command: String, Codable, CaseIterable {
        case stop = "Stop"
        case pause = "Pause"
        case unpause = "Unpause"
        case nextTrack = "NextTrack"
        case previousTrack = "PreviousTrack"
        case seek = "Seek"
        case rewind = "Rewind"
        case fastForward = "FastForward"
        case playPause = "PlayPause"
    }
    public var command: Command?
    public var seekPositionTicks: Int64?
    public var controllingUserId: String?

    public init(command: Command? = nil, seekPositionTicks: Int64? = nil, controllingUserId: String? = nil) {
        self.command = command
        self.seekPositionTicks = seekPositionTicks
        self.controllingUserId = controllingUserId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case command = "Command"
        case seekPositionTicks = "SeekPositionTicks"
        case controllingUserId = "ControllingUserId"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(command, forKey: .command)
        try container.encodeIfPresent(seekPositionTicks, forKey: .seekPositionTicks)
        try container.encodeIfPresent(controllingUserId, forKey: .controllingUserId)
    }
}

