//
// NotificationsNotificationTypeInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NotificationsNotificationTypeInfo: Codable, JSONEncodable, Hashable {

    public var type: String?
    public var name: String?
    public var enabled: Bool?
    public var category: String?
    public var isBasedOnUserEvent: Bool?

    public init(type: String? = nil, name: String? = nil, enabled: Bool? = nil, category: String? = nil, isBasedOnUserEvent: Bool? = nil) {
        self.type = type
        self.name = name
        self.enabled = enabled
        self.category = category
        self.isBasedOnUserEvent = isBasedOnUserEvent
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type = "Type"
        case name = "Name"
        case enabled = "Enabled"
        case category = "Category"
        case isBasedOnUserEvent = "IsBasedOnUserEvent"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(category, forKey: .category)
        try container.encodeIfPresent(isBasedOnUserEvent, forKey: .isBasedOnUserEvent)
    }
}

